<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A D Vishnu Prasad]]></title>
  <link href="https://advishnuprasad.com/atom.xml" rel="self"/>
  <link href="https://advishnuprasad.com/"/>
  <updated>2019-09-27T00:28:25+05:30</updated>
  <id>https://advishnuprasad.com/</id>
  <author>
    <name><![CDATA[A D Vishnu Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrade Kubernetes Version in AWS EKS]]></title>
    <link href="https://advishnuprasad.com/blog/2019/09/26/upgrade-kubernetes-version-in-eks/"/>
    <updated>2019-09-26T23:55:25+05:30</updated>
    <id>https://advishnuprasad.com/blog/2019/09/26/upgrade-kubernetes-version-in-eks</id>
    <content type="html"><![CDATA[<p>There are two things you need to do to upgrade Kubernetes in EKS.</p>

<p>Unlike <code>Azure AKS</code> where you can upgrade with a single button, in <code>AWS EKS</code> you will need
upgrade cluster and worker nodes separately.</p>

<h3>Upgrade Cluster</h3>

<p>=> Login into AWS console.</p>

<p>=> Go to EKS services.</p>

<p>=> Click on Clusters</p>

<p><img src="https://advishnuprasad.com/images/update_cluster.jpg" alt="Cluster Upgrade" /></p>

<h3>Upgrade Worker Nodes</h3>

<p>Reference Link: <a href="https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html">https://docs.aws.amazon.com/eks/latest/userguide/update-stack.html</a></p>

<h4>Step 1:</h4>

<p>Go to Worker node cloud formation stack and click on <code>Update</code></p>

<h4>Step 2:</h4>

<p>Click on &ldquo;Replace current template&rdquo;</p>

<p>Paste the following URL: <a href="https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2019-09-17/amazon-eks-nodegroup.yaml">https://amazon-eks.s3-us-west-2.amazonaws.com/cloudformation/2019-09-17/amazon-eks-nodegroup.yaml</a></p>

<p>Click &ldquo;Next&rdquo;</p>

<p><img src="https://advishnuprasad.com/images/update_stack_1.jpg" alt="Worker Node 1" /></p>

<h4>Step 3:</h4>

<p>Update the following parameters</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NodeAutoScalingGroupDesiredCapacity = NodeAutoScalingGroupDesiredCapacity</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NodeAutoScalingGroupMaxSize = NodeAutoScalingGroupDesiredCapacity + 1 (or more)
</span><span class='line'>(It must be more than what you have)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NodeImageIdSSMParam = /aws/service/eks/optimized-ami/`1.14`/amazon-linux-2/recommended/image_id
</span><span class='line'>(If your cluster version is 1.13 change it to 1.13. Ideally it should match with the Cluster version. Otherwise the upgrade won't work.
</span><span class='line'>You will end up in `matchnodeselector` error and `NotReady` status)
</span></code></pre></td></tr></table></div></figure>


<p>Leave the other fields to default</p>

<p>Click &ldquo;Next&rdquo;</p>

<p><img src="https://advishnuprasad.com/images/update_stack_2.jpg" alt="Worker Node 2" /></p>

<h4>Step 4:</h4>

<p>Go to last page and check the box. Click &ldquo;Update&rdquo;</p>

<p><img src="https://advishnuprasad.com/images/update_stack_3.jpg" alt="Worker Node 3" /></p>

<p>Once the stack is updated, Connect to your cluster. You should see your version upgraded to 1.14</p>

<p><code>kubectl get nodes</code></p>

<p><img src="https://advishnuprasad.com/images/final.jpg" alt="Final" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Build PgModeler From Source in MacOS Mojave]]></title>
    <link href="https://advishnuprasad.com/blog/2019/03/17/build-pgmodeler-from-source/"/>
    <updated>2019-03-17T20:07:46+05:30</updated>
    <id>https://advishnuprasad.com/blog/2019/03/17/build-pgmodeler-from-source</id>
    <content type="html"><![CDATA[<h4>Download the Source</h4>

<p>Download source from <a href="https://pgmodeler.io/download?source=true">here</a> <br>
Please refer <a href="https://pgmodeler.io/support/installation">Official build document</a></p>

<p>I had to make the following changes to make it work in my mac (MacOS Mojave)</p>

<h4>Install Requirements</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  brew install qt    
</span><span class='line'>  brew link qt5 —force
</span><span class='line'>  brew install postgresql
</span><span class='line'>  brew install libxml2</span></code></pre></td></tr></table></div></figure>


<h4>Edit pgmodeler.pri</h4>

<p>Open the cloned repo.  <br></p>

<p>Edit <code>PGSQL_LIB, PGSQL_INC, XML_INC, XML_LIB</code> in pgmodeler.pri
<sub> Please note that the following works only if you have used brew to install the requirements </sub></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  PGSQL_LIB = /usr/local/opt/postgresql/lib/libpq.dylib
</span><span class='line'>  PGSQL_INC = /usr/local/opt/postgresql/include
</span><span class='line'>  XML_INC = /usr/local/opt/libxml2/include/libxml2
</span><span class='line'>  XML_LIB = /usr/local/opt/libxml2/lib/libxml2.dylib</span></code></pre></td></tr></table></div></figure>


<h4>Build the software</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export PGMODELER_ROOT=/Applications/pgmodeler.app/
</span><span class='line'>qmake -r pgmodeler.pro
</span><span class='line'>make
</span><span class='line'>make install
</span><span class='line'>macdeployqt $PGMODELER_ROOT \
</span><span class='line'>                            -executable=$PGMODELER_ROOT/Contents/MacOS/pgmodeler-ch \
</span><span class='line'>                            -executable=$PGMODELER_ROOT/Contents/MacOS/pgmodeler-cli</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kubernetes- Elasticsearch Scheduled Backup and Retention Using Curator]]></title>
    <link href="https://advishnuprasad.com/blog/2018/10/07/kubernetes-elasticsearch-scheduled-backup-and-retention-using-curator/"/>
    <updated>2018-10-07T21:54:58+05:30</updated>
    <id>https://advishnuprasad.com/blog/2018/10/07/kubernetes-elasticsearch-scheduled-backup-and-retention-using-curator</id>
    <content type="html"><![CDATA[<p>This post will guide you to create a scheduled elasticsearch backup using curator in k8s cluster.</p>

<h4>Assumptions:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>You already have a 6.x.x elasticsearch k8s cluster
</span><span class='line'>You already have a backup system
</span><span class='line'>You are some what familiar with Kubernetes
</span><span class='line'>You are familiar with curator configs</span></code></pre></td></tr></table></div></figure>


<h4>Step 1: Create a configmap with curator yml</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Action 1 will create a snapshot
</span><span class='line'>Action 2 will keep last 20 days snapshots and delete that are older than 20 days</span></code></pre></td></tr></table></div></figure>


<p>curator.yml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apiVersion: v1
</span><span class='line'>kind: ConfigMap
</span><span class='line'>metadata:
</span><span class='line'>  name: curator-config
</span><span class='line'>  labels:
</span><span class='line'>    app: curator
</span><span class='line'>data:
</span><span class='line'>  backup.yml: |-
</span><span class='line'>    ---
</span><span class='line'>    # Remember, leave a key empty if there is no value.  None will be a string,
</span><span class='line'>    # not a Python "NoneType"
</span><span class='line'>    #
</span><span class='line'>    # Also remember that all examples have 'disable_action' set to True.  If you
</span><span class='line'>    # want to use this action as a template, be sure to set this to False after
</span><span class='line'>    # copying it.
</span><span class='line'>    actions:
</span><span class='line'>      1:
</span><span class='line'>        action: snapshot
</span><span class='line'>        description: "Create snapshot"
</span><span class='line'>        options:
</span><span class='line'>          repository: "primary_backup"
</span><span class='line'>          continue_if_exception: False
</span><span class='line'>          wait_for_completion: True
</span><span class='line'>        filters:
</span><span class='line'>          - filtertype: pattern
</span><span class='line'>            kind: regex
</span><span class='line'>            value: ".*$"
</span><span class='line'>      2:
</span><span class='line'>        action: delete_snapshots
</span><span class='line'>        description: &gt;-
</span><span class='line'>          Delete snapshots from the selected repository older than 10 days
</span><span class='line'>          (based on creation_date), for 'curator-' prefixed snapshots.
</span><span class='line'>        options:
</span><span class='line'>          repository: "primary_backup"
</span><span class='line'>          disable_action: False
</span><span class='line'>        filters:
</span><span class='line'>          - filtertype: pattern
</span><span class='line'>            kind: prefix
</span><span class='line'>            value: curator-
</span><span class='line'>            exclude:
</span><span class='line'>          - filtertype: age
</span><span class='line'>            source: creation_date
</span><span class='line'>            direction: older
</span><span class='line'>            unit: days
</span><span class='line'>            unit_count: 20
</span><span class='line'>  config.yml: |-
</span><span class='line'>    ---
</span><span class='line'>    # Remember, leave a key empty if there is no value.  None will be a string,
</span><span class='line'>    # not a Python "NoneType"
</span><span class='line'>    client:
</span><span class='line'>      hosts:
</span><span class='line'>        - elasticsearch
</span><span class='line'>      port: 9200
</span><span class='line'>      url_prefix:
</span><span class='line'>      use_ssl: False
</span><span class='line'>      certificate:
</span><span class='line'>      client_cert:
</span><span class='line'>      client_key:
</span><span class='line'>      ssl_no_validate: False
</span><span class='line'>      http_auth:
</span><span class='line'>      timeout: 30
</span><span class='line'>      master_only: False
</span><span class='line'>    logging:
</span><span class='line'>      loglevel: DEBUG</span></code></pre></td></tr></table></div></figure>


<h4>Step 2: Create a config map in your kubernetes cluster</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl apply -f curator.yml</span></code></pre></td></tr></table></div></figure>


<h4>Step 3: Create a cronjob</h4>

<p>es_cronjob.yml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apiVersion: batch/v1beta1
</span><span class='line'>kind: CronJob
</span><span class='line'>metadata:
</span><span class='line'>  name: esbackup
</span><span class='line'>  labels:
</span><span class='line'>    app: esbackup
</span><span class='line'>spec:
</span><span class='line'>  schedule: "@daily"
</span><span class='line'>  successfulJobsHistoryLimit: 1
</span><span class='line'>  failedJobsHistoryLimit: 3
</span><span class='line'>  concurrencyPolicy: Forbid
</span><span class='line'>  startingDeadlineSeconds: 120
</span><span class='line'>  jobTemplate:
</span><span class='line'>    spec:
</span><span class='line'>      template:
</span><span class='line'>        spec:
</span><span class='line'>          containers:
</span><span class='line'>          - image: bobrik/curator:5.5.4
</span><span class='line'>            name: curator
</span><span class='line'>            args: ["--config", "/etc/config/config.yml", "/etc/config/backup.yml"]
</span><span class='line'>            volumeMounts:
</span><span class='line'>            - name: config
</span><span class='line'>              mountPath: /etc/config
</span><span class='line'>          volumes:
</span><span class='line'>          - name: config
</span><span class='line'>            configMap:
</span><span class='line'>              name: curator-config
</span><span class='line'>          restartPolicy: Never</span></code></pre></td></tr></table></div></figure>


<h4>Step 4: Create cronjob in kubernetes</h4>

<p>This cronjob will run everyday 00:00 hrs</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>kubectl create -f es_cronjob.yml</span></code></pre></td></tr></table></div></figure>


<p>Reference:</p>

<ul>
<li><a href="https://medium.com/@hagaibarel/running-curator-as-a-kubernetes-cronjob-19eaab9afd3b">https://medium.com/@hagaibarel/running-curator-as-a-kubernetes-cronjob-19eaab9afd3b</a></li>
<li><a href="https://www.elastic.co/guide/en/elasticsearch/client/curator/current/delete_snapshots.html">https://www.elastic.co/guide/en/elasticsearch/client/curator/current/delete_snapshots.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Autocomplete Example]]></title>
    <link href="https://advishnuprasad.com/blog/2018/09/23/elasticsearch-autocomplete-example/"/>
    <updated>2018-09-23T20:57:23+05:30</updated>
    <id>https://advishnuprasad.com/blog/2018/09/23/elasticsearch-autocomplete-example</id>
    <content type="html"><![CDATA[<p>This post will help you to create autocomplete feature on Elasticsearch.</p>

<p>For Example, if you have a select box and when you search for <code>data</code> you would want to get all results that starts with <code>data</code>.</p>

<p><img src="https://advishnuprasad.com/images/blog_1.png" alt="ES1" /></p>

<!-- ![ES1](http://localhost:4000/images/blog_1.png) -->


<p>This can be done easily in Elasticsearch. The important thing here is the type of analyzer and tokenizer than you use for autocomplete.</p>

<h4>Step 1: Create Mapping with the following tokenizer and analyzer</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PUT auto-test
</span><span class='line'>{
</span><span class='line'>  "settings": {
</span><span class='line'>    "analysis": {
</span><span class='line'>      "analyzer": {
</span><span class='line'>        "autocomplete": {
</span><span class='line'>          "tokenizer": "autocomplete",
</span><span class='line'>          "filter": [
</span><span class='line'>            "lowercase"
</span><span class='line'>          ]
</span><span class='line'>        },
</span><span class='line'>        "autocomplete_search": {
</span><span class='line'>          "tokenizer": "lowercase"
</span><span class='line'>        }
</span><span class='line'>      },
</span><span class='line'>      "tokenizer": {
</span><span class='line'>        "autocomplete": {
</span><span class='line'>          "type": "edge_ngram",
</span><span class='line'>          "min_gram": 2,
</span><span class='line'>          "max_gram": 10,
</span><span class='line'>          "token_chars": [
</span><span class='line'>            "letter"
</span><span class='line'>          ]
</span><span class='line'>        }
</span><span class='line'>      }
</span><span class='line'>    }
</span><span class='line'>  },
</span><span class='line'>  "mappings": {
</span><span class='line'>    "test": {
</span><span class='line'>      "properties": {
</span><span class='line'>        "technology": {
</span><span class='line'>          "type": "text",
</span><span class='line'>          "analyzer": "autocomplete",
</span><span class='line'>          "search_analyzer": "autocomplete_search"
</span><span class='line'>        }
</span><span class='line'>      }
</span><span class='line'>    }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><code>autocomplete_search</code> analyzer is used for searching case insensitive words.</p>

<p>Step 2: Test Analyzers</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>POST auto-test/_analyze
</span><span class='line'>{
</span><span class='line'>  "field": "technology",
</span><span class='line'>  "text": "database"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>If you see the results, ES is creating the following tokens. You can change the min_gram based on your needs.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "tokens": [
</span><span class='line'>    {
</span><span class='line'>      "token": "da",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 2,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 0
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "dat",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 3,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 1
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "data",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 4,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 2
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "datab",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 5,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 3
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "databa",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 6,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 4
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "databas",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 7,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 5
</span><span class='line'>    },
</span><span class='line'>    {
</span><span class='line'>      "token": "database",
</span><span class='line'>      "start_offset": 0,
</span><span class='line'>      "end_offset": 8,
</span><span class='line'>      "type": "word",
</span><span class='line'>      "position": 6
</span><span class='line'>    }
</span><span class='line'>  ]
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Step 3: Create data and search</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>POST auto-test/test
</span><span class='line'>{
</span><span class='line'>  "technology": "data"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>POST auto-test/test
</span><span class='line'>{
</span><span class='line'>  "technology": "database"
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GET auto-test/_search
</span><span class='line'>{
</span><span class='line'>  "query": {
</span><span class='line'>    "match": {
</span><span class='line'>      "technology": "dat"
</span><span class='line'>    }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>The results should be</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{
</span><span class='line'>  "took": 2,
</span><span class='line'>  "timed_out": false,
</span><span class='line'>  "_shards": {
</span><span class='line'>    "total": 5,
</span><span class='line'>    "successful": 5,
</span><span class='line'>    "skipped": 0,
</span><span class='line'>    "failed": 0
</span><span class='line'>  },
</span><span class='line'>  "hits": {
</span><span class='line'>    "total": 2,
</span><span class='line'>    "max_score": 0.2876821,
</span><span class='line'>    "hits": [
</span><span class='line'>      {
</span><span class='line'>        "_index": "auto-test",
</span><span class='line'>        "_type": "test",
</span><span class='line'>        "_id": "3woWB2YBsF1yfhimkgKz",
</span><span class='line'>        "_score": 0.2876821,
</span><span class='line'>        "_source": {
</span><span class='line'>          "technology": "data"
</span><span class='line'>        }
</span><span class='line'>      },
</span><span class='line'>      {
</span><span class='line'>        "_index": "auto-test",
</span><span class='line'>        "_type": "test",
</span><span class='line'>        "_id": "xGsWB2YBVxVaheWYfgCc",
</span><span class='line'>        "_score": 0.2876821,
</span><span class='line'>        "_source": {
</span><span class='line'>          "technology": "database"
</span><span class='line'>        }
</span><span class='line'>      }
</span><span class='line'>    ]
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elasticsearch Backup and Restore From Azure Blob Storage]]></title>
    <link href="https://advishnuprasad.com/blog/2017/11/09/elasticsearch-backup-and-restore-from-azure-blob-storage/"/>
    <updated>2017-11-09T13:00:26-05:00</updated>
    <id>https://advishnuprasad.com/blog/2017/11/09/elasticsearch-backup-and-restore-from-azure-blob-storage</id>
    <content type="html"><![CDATA[<p>Assumptions:</p>

<p>You already have a working ELK cluster (5.x).</p>

<p>Azure Account</p>

<h3>Step 1: Storage account</h3>

<p>Create Storage Account:</p>

<p><img src="https://advishnuprasad.com/images/es1.jpg" alt="ES1" /></p>

<!-- ![ES1](http://localhost:4000/images/es1.jpg)  -->


<h3>Step 2: Get Credentials</h3>

<p>Get Storage account name and key</p>

<p><img src="https://advishnuprasad.com/images/es2.jpg" alt="ES2" /></p>

<!-- ![ES2](http://localhost:4000/images/es2.jpg)  -->


<h3>Step 3: Install azure plugin</h3>

<p>Ssh into all elastic search nodes.</p>

<p>Go to <code>/usr/share/elasticsearch/</code></p>

<p>Run <code>sudo bin/elasticsearch-plugin install repository-azure</code></p>

<h3>Step 4: Update config</h3>

<p>Go to <code>/etc/elasticsearch/elasticsearch.yml</code>. Add your Azure configuration
<img src="https://advishnuprasad.com/images/es3.jpg" alt="ES3" /></p>

<!-- ![ES3](http://localhost:4000/images/es3.jpg)  -->


<p>Restart <code>sudo service elasticsearch restart</code></p>

<h3>Step 5: Create snapshots</h3>

<p>Open Kibana portal and Click on <code>Dev Tools</code></p>

<p>Configure Repository</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PUT _snapshot/es_snapshot
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="s2">&quot;type&quot;</span>: <span class="s2">&quot;azure&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create Backup</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>PUT _snapshot/es_snapshot/mybackup_1
</span></code></pre></td></tr></table></div></figure>


<p>List snapshots</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>GET /_snapshot/es_snapshot/mybackup_1
</span></code></pre></td></tr></table></div></figure>


<h3>Step 6:</h3>

<p>Go to Storage account. Click on &ldquo;Containers&rdquo; to see the snapshots.</p>

<p><img src="https://advishnuprasad.com/images/es4.jpg" alt="ES4" /></p>

<!-- ![ES4](http://localhost:4000/images/es4.jpg)  -->


<h2>Restore from Azure storage account</h2>

<h3>Step 7:</h3>

<p>Follow step 1 to step 4 to configure your new cluster.</p>

<h3>Step 8:</h3>

<p>Close all the indices</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>POST /_all/_close
</span></code></pre></td></tr></table></div></figure>


<h3>Step 9:</h3>

<p>Restore from snapshot</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>POST /_snapshot/es_snapshot/mybackup_1/_restore
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Commands]]></title>
    <link href="https://advishnuprasad.com/blog/2017/10/31/docker-commands/"/>
    <updated>2017-10-31T11:50:54-04:00</updated>
    <id>https://advishnuprasad.com/blog/2017/10/31/docker-commands</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker pull my_image # Pull my_image from hub.docker.com
</span><span class='line'>
</span><span class='line'>docker pull my_image:10.1.2 # Pull a specific version
</span><span class='line'>
</span><span class='line'>docker build . # Build image using Dockerfile in current directory
</span><span class='line'>
</span><span class='line'>docker images # List docker images
</span><span class='line'>
</span><span class='line'>docker build -t my_image . # Build and name the image as my_image
</span><span class='line'>
</span><span class='line'>docker run -d -e ENV_NAME=pswd my_image # Run docker image as daemon (-d) and pass env variables (-e) ENV_PASSWORD 
</span><span class='line'>
</span><span class='line'>docker ps # List running containers
</span><span class='line'>
</span><span class='line'>docker run —-name my-image-1 -d -e ENV_PASSWORD=pswd my_image # Run image in a contianer named my-image-1
</span><span class='line'>
</span><span class='line'>docker run —-name my-image-1 -d -e ENV_PASSWORD=pswd -p 3306:306 my_image  # Map and Expose (-p) the docker container on the port 3306 so that it can be accessed from outside the secure docker env
</span><span class='line'>
</span><span class='line'>docker-machine ip default  # List ip of default docker 
</span><span class='line'>
</span><span class='line'>docker stop my_image # Stop container my_image
</span><span class='line'>
</span><span class='line'>docker start my_image # Start continer my_image
</span><span class='line'>
</span><span class='line'>docker netwrok ls       # List networks created inside docker
</span><span class='line'>
</span><span class='line'>docker network create my-network # Create a custom network (including internal DNS server) so that containers can talk to each other
</span><span class='line'>
</span><span class='line'>docker network connect my-network my-image-1 # Add the container (my-image-1) to the network (my-network)
</span><span class='line'>
</span><span class='line'>docker run —rm —network my-network my-image-1 # Specify the network while starting the container
</span><span class='line'>
</span><span class='line'>docker run --name my-est-my_image -d -v /my/datadir:/var/lib/my_data -e ENV_PASSWORD=pswd  my_image # Map the host volume (-v)  /my/datadir to docker volume /var/lib/my_data
</span><span class='line'>
</span><span class='line'>docker tag my_image advp/my_image:1.0 # Tag the image with username and version
</span><span class='line'>
</span><span class='line'>docker login  #L ogin to docker repo
</span><span class='line'>
</span><span class='line'>docker push advp/my_image:1.0 # Push your image to docker repo
</span><span class='line'>
</span><span class='line'>docker ps -a   # List all containers regardless of state
</span><span class='line'>
</span><span class='line'>docker rm my-image-1 # Remove comtainer my-image-1
</span><span class='line'>
</span><span class='line'>docker rmi my_image # Remove image my_image
</span><span class='line'>
</span><span class='line'>docker rmi $(docker images -q -f dangling=true) #Remove unnamed dangling images which may have got created while debugging etc
</span><span class='line'>
</span><span class='line'>docker port my-image-1 #List ports exposed by a container
</span><span class='line'>
</span><span class='line'>docker top my-image-1 # List processes running in the container
</span><span class='line'>
</span><span class='line'>docker exec my-image-1 ls  # Run a command (ls) inside a container (my-image-1)
</span><span class='line'>
</span><span class='line'>docker exec -it my-image-1 bash # SSH into the container and access bash</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Send Hipchat Notifications Using Python]]></title>
    <link href="https://advishnuprasad.com/blog/2017/03/07/send-hipchat-notifications-using-python/"/>
    <updated>2017-03-07T18:57:53+05:30</updated>
    <id>https://advishnuprasad.com/blog/2017/03/07/send-hipchat-notifications-using-python</id>
    <content type="html"><![CDATA[<p>There might be scenarios where you want to send hipchat notifications programatically.
Following python script will help you to create notifications in 3 simple steps.</p>

<p><img src="https://advishnuprasad.com/images/hipchat.png" alt="Hipchat Image" />
<sub><sup> * Image credit: google images </sub></sup></p>

<!-- ![Hipchat Image](http://localhost:4000/images/hipchat.png) -->


<h3>Step 1:</h3>

<p>Generate your auth token from your hipchat account.
<code>Hipchat -&gt; Account Settings -&gt; API Access</code></p>

<h3>Step 2:</h3>

<p>Note: I am using hipchat api v1.</p>

<figure class='code'><figcaption><span>hipchat.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python3.5</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">notify</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">deployer</span> <span class="o">=</span> <span class="s">&#39;Vishnu&#39;</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="s">&#39;green&#39;</span><span class="p">):</span>
</span><span class='line'>  <span class="n">url</span> <span class="o">=</span> <span class="s">&quot;https://api.hipchat.com/v1/rooms/message?auth_token=&lt;auth_token&gt;&amp;format=json&quot;</span>
</span><span class='line'>  <span class="n">payload</span> <span class="o">=</span> <span class="p">{</span> <span class="s">&quot;room_id&quot;</span> <span class="p">:</span> <span class="s">&quot;deployments&quot;</span> <span class="p">,</span> <span class="s">&quot;from&quot;</span> <span class="p">:</span> <span class="n">deployer</span><span class="p">,</span> <span class="s">&quot;message&quot;</span> <span class="p">:</span> <span class="n">message</span><span class="p">,</span> <span class="s">&quot;color&quot;</span> <span class="p">:</span> <span class="n">color</span><span class="p">,</span> <span class="s">&quot;notify&quot;</span> <span class="p">:</span> <span class="mi">1</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">payload</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Step 3:</h3>

<figure class='code'><figcaption><span>deployer.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python3.5</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">hipchat</span>
</span><span class='line'>
</span><span class='line'><span class="c"># For successful notif</span>
</span><span class='line'><span class="n">hipchat</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s">&quot;Deployment started&quot;</span><span class="p">,</span> <span class="s">&quot;Vishnu&quot;</span><span class="p">,</span> <span class="s">&quot;green&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># If you want error notif</span>
</span><span class='line'><span class="n">hipchat</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="s">&quot;Deployment failed&quot;</span><span class="p">,</span> <span class="s">&quot;Vishnu&quot;</span><span class="p">,</span> <span class="s">&quot;red&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create Swap Using Ansible in Ubuntu]]></title>
    <link href="https://advishnuprasad.com/blog/2017/02/22/create-swap-using-ansible-in-ubuntu/"/>
    <updated>2017-02-22T07:03:12+05:30</updated>
    <id>https://advishnuprasad.com/blog/2017/02/22/create-swap-using-ansible-in-ubuntu</id>
    <content type="html"><![CDATA[<p>This ansible script will help you to create SWAP memory in a single command.
Just change this line based on your required memory.</p>

<p>For 4 GB : <code>command: dd if=/dev/zero of=/swapfile bs=1G count=4</code></p>

<p>For 2 GB : <code>command: dd if=/dev/zero of=/swapfile bs=1G count=2</code></p>

<figure class='code'><figcaption><span>Playbook command</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ansible-playbook swap.yml -i inventorys/hosts --ask-pass
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>swap.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Create swap</span>
</span><span class='line'>  <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">advp</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>  <span class="l-Scalar-Plain">gather_facts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="err">    </span><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Check whether swap is already enabled or not</span>
</span><span class='line'><span class="err">    </span>  <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">cat /etc/sysctl.conf</span>
</span><span class='line'><span class="err">    </span>  <span class="l-Scalar-Plain">register</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">swap_enabled</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">block</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create swap file</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">dd if=/dev/zero of=/swapfile bs=1G count=4</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">change permission type</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">file</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">path=/swapfile mode=600 state=file</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">setup swap</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mkswap /swapfile</span>
</span><span class='line'><span class="err">    </span>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">create swap</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">swapon /swapfile</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Add to fstab</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">lineinfile dest=/etc/fstab regexp=&quot;swapfile&quot; line=&quot;/swapfile none swap sw 0 0&quot; state=present</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">start swap</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">command</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">swapon -a</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set swapiness</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">sysctl</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="err">    </span>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vm.swappiness</span>
</span><span class='line'><span class="err">    </span>      <span class="l-Scalar-Plain">value</span><span class="p-Indicator">:</span> <span class="s">&quot;10&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set swapiness</span>
</span><span class='line'><span class="err">    </span>    <span class="l-Scalar-Plain">sysctl</span><span class="p-Indicator">:</span>
</span><span class='line'><span class="err">    </span>      <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vm.vfs_cache_pressure</span>
</span><span class='line'><span class="err">    </span>      <span class="l-Scalar-Plain">value</span><span class="p-Indicator">:</span> <span class="s">&quot;50&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="err">    </span>  <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">swap_enabled.stdout.find(&#39;swappiness&#39;) == -1</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Encryption at REST]]></title>
    <link href="https://advishnuprasad.com/blog/2016/09/24/encryption-at-rest/"/>
    <updated>2016-09-24T22:04:32+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/09/24/encryption-at-rest</id>
    <content type="html"><![CDATA[<p>Already so many people have written about what/why Encryption at REST.
So I am just going to help you to setup Encryption at REST in ubuntu using luksFormat.
You can read more about the cryptsetup and LuksFormat <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption">here</a></p>

<h3>Step 1: Create crypt volume file format</h3>

<p>Assuming the device is <code>/dev/xvdc</code>. Please do not forget the passphrase. You will not be able to recover the data if you forget.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su
</span><span class='line'>cryptsetup -y -v luksFormat /dev/xvdc
</span></code></pre></td></tr></table></div></figure>


<h3>Step 2:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cryptsetup luksOpen /dev/xvdc edata-epg
</span></code></pre></td></tr></table></div></figure>


<h3>Step 3:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cryptsetup -v status edata-epg
</span></code></pre></td></tr></table></div></figure>


<p>Step 4:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apt-get install pv
</span><span class='line'>pv -tpreb /dev/zero <span class="p">|</span> dd <span class="nv">of</span><span class="o">=</span>/dev/mapper/edata-epg <span class="nv">bs</span><span class="o">=</span>128M
</span></code></pre></td></tr></table></div></figure>


<p>Step 5:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkfs.ext4 /dev/mapper/edata-epg
</span><span class='line'>mount /dev/mapper/edata-epg /e_data
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a Postgres Master and Slave Streaming Server With S3 Backup]]></title>
    <link href="https://advishnuprasad.com/blog/2016/09/05/creating-a-postgres-master-and-slave-streaming-server-with-s3-backup/"/>
    <updated>2016-09-05T13:01:13+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/09/05/creating-a-postgres-master-and-slave-streaming-server-with-s3-backup</id>
    <content type="html"><![CDATA[<h3>Setup</h3>

<p><img src="https://advishnuprasad.com/images/db.png" alt="API docs image" />
<sub><sup> * Image credit: google images </sub></sup></p>

<h3>Master server setup</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo sh -c <span class="s1">&#39;echo &quot;deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main&quot; &gt;&gt; /etc/apt/sources.list.d/pgdg.list&#39;</span>
</span><span class='line'>wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - <span class="p">|</span> sudo apt-key add -
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install postgresql postgresql-contrib
</span></code></pre></td></tr></table></div></figure>


<p>Create user for replication</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su postgres
</span><span class='line'>psql
</span><span class='line'>CREATE USER replicator REPLICATION LOGIN ENCRYPTED PASSWORD <span class="s1">&#39;password&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Edit the following line in postgresql.conf</p>

<figure class='code'><figcaption><span>/etc/postgresql/9.5/postgresql.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">wal_level</span> <span class="o">=</span> <span class="n">hot_standby</span>
</span><span class='line'><span class="n">max_wal_senders</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="n">wal_keep_segments</span> <span class="o">=</span> <span class="mi">8</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add the following line in pg_hba.conf</p>

<figure class='code'><figcaption><span>/etc/postgresql/9.5/pg_hba.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">host</span>     <span class="n">replication</span>     <span class="n">replicator</span>      <span class="o">&lt;</span><span class="n">slave</span> <span class="n">ip</span><span class="o">&gt;</span>            <span class="n">md5</span>
</span></code></pre></td></tr></table></div></figure>


<p>Restart master postgres.</p>

<h3>Slave server setup</h3>

<p>Setup postgresql 9.5 in slave server.
Stop the server before chaning any configurations</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su postgres
</span><span class='line'>service postgresql stop
</span></code></pre></td></tr></table></div></figure>


<p>Edit the following line in postgresql.conf</p>

<figure class='code'><figcaption><span>/etc/postgresql/9.5/postgresql.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">wal_level</span> <span class="o">=</span> <span class="n">hot_standby</span>
</span><span class='line'><span class="n">hot_standby</span> <span class="o">=</span> <span class="k">on</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pull base backup from master server</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">postgresql</span><span class="o">/</span><span class="mi">9</span><span class="p">.</span><span class="mi">5</span><span class="o">/</span><span class="n">main</span>
</span><span class='line'><span class="n">pg_basebackup</span> <span class="o">-</span><span class="n">h</span> <span class="o">&lt;</span><span class="n">master_ip</span><span class="o">&gt;</span> <span class="o">-</span><span class="n">D</span> <span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">postgresql</span><span class="o">/</span><span class="mi">9</span><span class="p">.</span><span class="mi">5</span><span class="o">/</span><span class="n">main</span> <span class="o">-</span><span class="n">U</span> <span class="n">replicator</span> <span class="o">-</span><span class="n">v</span> <span class="o">-</span><span class="n">P</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create a recovery file for streaming</p>

<figure class='code'><figcaption><span>/var/lib/postgresql/9.5/main/recovery.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">standby_mode</span> <span class="o">=</span> <span class="s1">&#39;on&#39;</span>
</span><span class='line'><span class="n">primary_conninfo</span> <span class="o">=</span> <span class="s1">&#39;host=&lt;master_ip&gt; port=5432 user=replicator password=password&#39;</span>
</span><span class='line'><span class="n">trigger_file</span> <span class="o">=</span> <span class="s1">&#39;/var/lib/postgresql.trigger&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now start the slave server</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service postgresql start
</span></code></pre></td></tr></table></div></figure>


<p>Run the following command in master to check whether replication is on or not.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">pg_stat_replication</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Send Wal-E files to S3 for backup</h2>

<p>Run the following commands to setup wal-e</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su
</span><span class='line'>sudo apt-get install daemontools libevent-dev python-all-dev lzop pv
</span><span class='line'>sudo apt-get install python-setuptools
</span><span class='line'>sudo easy_install pip
</span><span class='line'>sudo pip install wal-e --upgrade
</span></code></pre></td></tr></table></div></figure>


<p>Add your s3 credentials</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /etc/wal-e.d/env
</span><span class='line'><span class="nb">echo</span> &lt;ACCESS_KEY&gt; &gt; /etc/wal-e.d/env/AWS_ACCESS_KEY_ID
</span><span class='line'><span class="nb">echo</span> &lt;SECRET_KEY&gt; &gt; /etc/wal-e.d/env/AWS_SECRET_ACCESS_KEY
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;s3://&lt;bucket_path&gt;&#39;</span> &gt; /etc/wal-e.d/env/WALE_S3_PREFIX
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;us-east-1&#39;</span> &gt; /etc/wal-e.d/env/AWS_REGION
</span><span class='line'>chown -R root:postgres /etc/wal-e.d
</span></code></pre></td></tr></table></div></figure>


<p>Create a base backup</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>envdir /etc/wal-e.d/env wal-e backup-push <span class="nv">$PG_DATA</span>
</span></code></pre></td></tr></table></div></figure>


<p>List all the backup files</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>envdir /etc/wal-e.d/env /usr/local/bin/wal-e backup-list
</span></code></pre></td></tr></table></div></figure>


<p>Push Latest backup from S3</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>envdir /etc/wal-e.d/env /usr/local/bin/wal-e backup-fetch LATEST
</span></code></pre></td></tr></table></div></figure>


<p>Setup daily backup push crontab</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>crontab -e
</span><span class='line'>/usr/bin/envdir /etc/wal-e.d/env /usr/local/bin/wal-e backup-push /e_data/main/ &gt; /tmp/postgres_wale_backup_push.log<span class="p">;</span>
</span><span class='line'><span class="c">#keep last 5 base backups</span>
</span><span class='line'>/usr/bin/envdir /etc/wal-e.d/env /usr/local/bin/wal-e delete --confirm retain <span class="m">5</span> &gt; /tmp/postgres_wale_backup_delete.log<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Please comment here if you face any problems during the setup.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup NFS Server and Client Using Ansible]]></title>
    <link href="https://advishnuprasad.com/blog/2016/03/29/setup-nfs-server-and-client-using-ansible/"/>
    <updated>2016-03-29T18:16:12+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/03/29/setup-nfs-server-and-client-using-ansible</id>
    <content type="html"><![CDATA[<h3>Setup NFS server and client using ansible</h3>

<p>If you have a centralized server and you want to share a disk from the server, the best way is
to use NFS model.</p>

<p><img src="https://advishnuprasad.com/images/nfs.png" alt="API docs image" /></p>

<p>You might have to create a server with enough disk space. Let&rsquo;s say you have a disk with file system
as <code>/dev/xvdb</code> and the size is 100 GB.</p>

<p>Now you want to share this volume with other machines. Below is the script to do it using ansible.</p>

<p>Read <a href="https://help.ubuntu.com/community/SettingUpNFSHowTo">this</a> tutorial before writing ansible script.</p>

<h3>Ansible script</h3>

<figure class='code'><figcaption><span>inventory.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">[</span><span class="nv">nfs_server</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.1</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">[nfs_clients]</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.2</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>exports.j2</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/exports: the access control list for filesystems which may be exported</span>
</span><span class='line'><span class="c">#               to NFS clients.  See exports(5).</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Example for NFSv2 and NFSv3:</span>
</span><span class='line'><span class="c"># /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Example for NFSv4:</span>
</span><span class='line'><span class="c"># /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)</span>
</span><span class='line'><span class="c"># /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'>/nfs            10.0.0.1/24<span class="o">(</span>rw,sync,no_root_squash,no_subtree_check<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>nfs-server.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nfs_server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Create mountable dir</span>
</span><span class='line'>      <span class="l-Scalar-Plain">file</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">path=/share state=directory mode=777 owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">make sure the mount drive has a filesystem</span>
</span><span class='line'>      <span class="l-Scalar-Plain">filesystem</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fstype=ext4 dev={{ mountable_share_drive | default(&#39;/dev/xvdb&#39;) }}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set mountpoints</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=/share src={{ mountable_share_drive | default(&#39;/dev/xvdb&#39;) }} fstype=auto opts=defaults,nobootwait dump=0 passno=2 state=mounted</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Ensure NFS utilities are installed.</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name={{ item }} state=installed update_cache=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">nfs-common</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">nfs-kernel-server</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">copy /etc/exports</span>
</span><span class='line'>      <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">src=exports.j2 dest=/etc/exports owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">restart nfs server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=nfs-kernel-server state=restarted</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>nfs_clients.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nfs_clients</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Ensure NFS common is installed.</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=nfs-common state=installed update_cache=yes</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Create mountable dir</span>
</span><span class='line'>      <span class="l-Scalar-Plain">file</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">path=/nfs state=directory mode=777 owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set mountpoints</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=/nfs src={{hostvars[groups[&#39;nfs_server&#39;][0]][&#39;ansible_eth0&#39;][&#39;ipv4&#39;][&#39;address&#39;]}}:/share fstype=nfs opts=defaults,nobootwait dump=0 passno=2 state=mounted</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SOAP Request From Ruby Without Savon]]></title>
    <link href="https://advishnuprasad.com/blog/2016/03/25/soap-request-from-ruby-without-savon/"/>
    <updated>2016-03-25T21:11:47+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/03/25/soap-request-from-ruby-without-savon</id>
    <content type="html"><![CDATA[<h3>Send SOAP request from ruby net/http without using Savon gem</h3>

<p>You would have seen everyone is using Savon gem for sending SOAP request. But what if the service is using SOAP 1.1.
You might want to write your own http request. Here is the way to send request with SOAP envelope body.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/https&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Create the http object</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s2">&quot;http://www.webservicex.net/globalweather.asmx?WSDL&quot;</span>
</span><span class='line'><span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'><span class="n">http</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'><span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Raw SOAP XML to be passed</span>
</span><span class='line'><span class="c1"># TODO : Date should be dynamic</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">&lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;</span>
</span><span class='line'><span class="sh">  &lt;soap:Body&gt;</span>
</span><span class='line'><span class="sh">    &lt;GetWeather xmlns=&quot;http://www.webserviceX.NET&quot;&gt;</span>
</span><span class='line'><span class="sh">      &lt;CityName&gt;Madras&lt;/CityName&gt;</span>
</span><span class='line'><span class="sh">      &lt;CountryName&gt;India&lt;/CountryName&gt;</span>
</span><span class='line'><span class="sh">    &lt;/GetWeather&gt;</span>
</span><span class='line'><span class="sh">  &lt;/soap:Body&gt;</span>
</span><span class='line'><span class="sh">&lt;/soap:Envelope&gt;</span>
</span><span class='line'><span class="no">EOF</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># # Set Headers</span>
</span><span class='line'><span class="c1"># SOAPAction is mandatory</span>
</span><span class='line'><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;Content-Type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;text/xml; charset=utf-8&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;SOAPAction&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://www.webserviceX.NET/GetWeather&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span><span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">path</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Parse</span>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">XML</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">body</span><span class="p">)</span>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">remove_namespaces!</span> <span class="c1"># Remove namespaces from xml to make it clean</span>
</span><span class='line'><span class="nb">p</span> <span class="n">doc</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Provide Ssh Access to User Using Ansible]]></title>
    <link href="https://advishnuprasad.com/blog/2016/02/11/add-user/"/>
    <updated>2016-02-11T19:42:30+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/02/11/add-user</id>
    <content type="html"><![CDATA[<h3>How to provide production server access to users using ansible?</h3>

<h4>Assumptions:</h4>

<p>  You have  ssh access to prod servers as Ubuntu user.</p>

<h5>Ansible Script for adding user</h5>

<figure class='code'><figcaption><span>add_user.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># ansible-playbook add_user.yml --extra-vars &quot;user=advp key=advp.pub&quot; -i ad</span>
</span><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Add user</span>
</span><span class='line'>      <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name=&quot;{{ user }}&quot;</span>
</span><span class='line'>            <span class="l-Scalar-Plain">shell=/bin/bash</span>
</span><span class='line'>            <span class="l-Scalar-Plain">state=present</span>
</span><span class='line'>            <span class="l-Scalar-Plain">groups=staff</span>
</span><span class='line'>            <span class="l-Scalar-Plain">append=yes</span>
</span><span class='line'>            <span class="l-Scalar-Plain">createhome=yes</span>
</span><span class='line'>            <span class="l-Scalar-Plain">password=&lt;password SALT&gt;</span>
</span><span class='line'>            <span class="l-Scalar-Plain">update_password=on_create</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Add keys to the users</span>
</span><span class='line'>      <span class="l-Scalar-Plain">authorized_key</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">key=&quot;{{ lookup(&#39;file&#39;, &#39;{{ key }}&#39;) }}&quot;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">user=&quot;{{ user }}&quot;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">state=present</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Add a single user:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ansible-playbook add_user.yml --extra-vars <span class="s2">&quot;user=advp key=&lt;user/pub/key/path&gt;&quot;</span>  -i inventory/ad
</span></code></pre></td></tr></table></div></figure>


<p>don&rsquo;t forget to change the user and key location in the above command.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate API Documentation Using Rspec Acceptance Tests]]></title>
    <link href="https://advishnuprasad.com/blog/2016/02/07/api-docs-using-rspecs/"/>
    <updated>2016-02-07T11:43:58+05:30</updated>
    <id>https://advishnuprasad.com/blog/2016/02/07/api-docs-using-rspecs</id>
    <content type="html"><![CDATA[<h4>Step 1:</h4>

<p>Install required gems</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rspec_api_documentation&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;raddocs&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>Create acceptance_helper.rb in spec folder</p>

<figure class='code'><figcaption><span>acceptance_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec_api_documentation&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec_api_documentation/dsl&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RspecApiDocumentation</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">format</span> <span class="o">=</span> <span class="ss">:json</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">curl_host</span> <span class="o">=</span> <span class="s1">&#39;http://fysquare.dev&#39;</span> <span class="c1"># Will be used in curl request</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">api_name</span> <span class="o">=</span> <span class="s2">&quot;FySquare API&quot;</span> <span class="c1"># Your API name</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">request_headers_to_include</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Host&quot;</span><span class="p">,</span> <span class="s2">&quot;Content-Type&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">response_headers_to_include</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Host&quot;</span><span class="p">,</span> <span class="s2">&quot;Content-Type&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">curl_headers_to_filter</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Authorization&quot;</span><span class="o">]</span> <span class="c1"># Remove this if you want to show Auth headers in request</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">keep_source_order</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create raddoc.rb in initializers</p>

<figure class='code'><figcaption><span>raddoc.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Raddocs</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">api_name</span> <span class="o">=</span> <span class="s2">&quot;FySquare API Documentation&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add API route in config.rb</p>

<figure class='code'><figcaption><span>routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">mount</span> <span class="no">Raddocs</span><span class="o">::</span><span class="no">App</span> <span class="o">=&gt;</span> <span class="s2">&quot;/api_docs&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3:</h4>

<p>Now you need to write acceptance specs which will be used to generate docs.</p>

<p>Below is the spec for listing users API. You can change the params depends on your API.</p>

<figure class='code'><figcaption><span>users_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;acceptance_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">resource</span> <span class="s2">&quot;User&quot;</span><span class="p">,</span> <span class="ss">acceptance</span><span class="p">:</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">header</span> <span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Auth code&#39;</span>
</span><span class='line'>    <span class="n">header</span> <span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;application/json&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;/api/users&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">example_request</span> <span class="s2">&quot;Listing Users&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">explanation</span> <span class="s2">&quot;List all the users in the system&quot;</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:ids</span><span class="p">,</span> <span class="s2">&quot;List of user ids to be fetched&quot;</span>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:email</span><span class="p">,</span> <span class="s2">&quot;Search users by email&quot;</span>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:page</span><span class="p">,</span> <span class="s2">&quot;Page to view&quot;</span>
</span><span class='line'>    <span class="n">example</span> <span class="s2">&quot;Get users by params&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">explanation</span> <span class="s2">&quot;Get users by params&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">do_request</span><span class="p">(</span><span class="ss">:ids</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">do_request</span><span class="p">(</span><span class="ss">:email</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;foo@example.com&#39;</span><span class="p">,</span> <span class="s1">&#39;doo@example.com&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;/api/users/:id&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">let</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">example_request</span> <span class="s2">&quot;Getting a specific user&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4:</h4>

<p>Run this rake command to generate API.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">docs</span><span class="p">:</span><span class="n">generate</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now navigate to <code>localhost:3000/docs</code></p>

<p><img src="https://advishnuprasad.com/images/api_doc1.png" alt="API docs image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Active Model Serializers]]></title>
    <link href="https://advishnuprasad.com/blog/2014/11/14/active-model-serializers/"/>
    <updated>2014-11-14T19:42:22+05:30</updated>
    <id>https://advishnuprasad.com/blog/2014/11/14/active-model-serializers</id>
    <content type="html"><![CDATA[<h3>When to use active model serializer ?</h3>

<p>When you have your app running on both browser and mobile app, and if you have a backend rails server then active model serialiser is a perfect gem for serving APIs.</p>

<h3>Gems</h3>

<p>There are other gems like rabl but I personally prefer <code>active_model_serializers</code> gem because this is extremely easy to use and it has lot of + points.</p>

<h4>Step 1 : Add it to your Gemfile</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;active_model_serializers&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.9.3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2 : Create a serializer</h4>

<p>Create a serializer file by running</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">serializer</span> <span class="n">user</span>
</span></code></pre></td></tr></table></div></figure>


<p>which will create <code>app/serializers/user_serializer.rb</code></p>

<h4>Step 3 :</h4>

<p>In serializer, you can add attributes, associations, custom methods.</p>

<figure class='code'><figcaption><span>user_serializer.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSerializer</span> <span class="o">&lt;</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Serializer</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">:timestamp</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So here id and name are user fields. Followers is an association in user. timestamp is a custom method.</p>

<p>You can define that method like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">timestamp</span>
</span><span class='line'>  <span class="n">object</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">B</span> <span class="o">%</span><span class="n">d</span> <span class="o">%</span><span class="n">Y</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4 :</h4>

<p>In your controller, make sure you are rendering json and html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_with</span> <span class="vi">@user</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you visit <code>/users/1.json</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;email&quot;</span><span class="p">:</span> <span class="s2">&quot;foodoo@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Foo doo&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;microposts&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;content&quot;</span><span class="p">:</span> <span class="s2">&quot;This is a micropost&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;user_id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;created_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;updated_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;followers&quot;</span><span class="p">:</span> <span class="p">[</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Solr Servers in Single Machine]]></title>
    <link href="https://advishnuprasad.com/blog/2014/04/26/multiple-solrs-in-single-solr-instance/"/>
    <updated>2014-04-26T10:52:00+05:30</updated>
    <id>https://advishnuprasad.com/blog/2014/04/26/multiple-solrs-in-single-solr-instance</id>
    <content type="html"><![CDATA[<h4>Step 1:</h4>

<p>Go to your solr directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/solr141/
</span><span class='line'>sudo mkdir home1
</span><span class='line'>copy contents into home1 directory from other home directory.
</span><span class='line'>sudo cp -a /opt/solr141/home/. /opt/solr141/home1
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>create <code>solr1.xml</code> under <code>tomcat6/conf/catalina/localhost.</code> Copy from <code>solr.xml</code> and just change value to point to new home dir in environment tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?--&gt;</span>
</span><span class='line'><span class="nt">&lt;Context</span> <span class="na">docBase=</span><span class="s">&quot;/opt/solr/solr141/dist/apache-solr-1.4.1.war&quot;</span> <span class="na">debug=</span><span class="s">&quot;0&quot;</span> <span class="na">crossContext=</span><span class="s">&quot;true&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;Environment</span> <span class="na">name=</span><span class="s">&quot;solr/home&quot;</span> <span class="na">type=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="na">value=</span><span class="s">&quot;/opt/solr/solr141/home1&quot;</span> <span class="na">override=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/Context&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3:</h4>

<figure class='code'><figcaption><span>/opt/solr/solr141/home1/conf/Solr-config.xml </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;dataDir&gt;<span class="k">${</span><span class="nv">solr</span><span class="p">.data.dir:/opt/solr/solr141/home1/data</span><span class="k">}</span>&lt;/dataDir&gt;
</span><span class='line'>&lt;locktype&gt;simple&lt;/locktype&gt;
</span><span class='line'>&lt;unlockonstartup&gt;true&lt;/unlockonstartup&gt;
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4:</h4>

<p>Restart tomcat</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo service tomcat6 restart
</span></code></pre></td></tr></table></div></figure>


<h4>Step 5:</h4>

<p>Since we copied from other home folder, we need to clean up the index</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl localhost:7585/solr1/update --data <span class="s1">&#39;*:*&#39;</span> -H <span class="s1">&#39;Content-type:text/xml; charset=utf-8&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There you go.</p>

<p><code>localhost:8080/solr1</code> should be up and running</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fetch Records From Sql Query - Ruby on Rails - Oci8 Cursor]]></title>
    <link href="https://advishnuprasad.com/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor/"/>
    <updated>2014-03-14T18:50:26+05:30</updated>
    <id>https://advishnuprasad.com/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor</id>
    <content type="html"><![CDATA[<p>There might be time when you can&rsquo;t use ActiveRecord finders but have to write custom
queries to fetch the records.</p>

<p>Below example is to fetch records using oci8 adapter.(i.e If you are using oracle db)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;select id, email from users&quot;</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="no">OCI8</span><span class="o">::</span><span class="ss">Cursor</span><span class="p">:</span><span class="mh">0xf73ac30</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>which is nothing but a cursor object.
But how to read the records from this cursor?.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">while</span> <span class="n">r</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">fetch_hash</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="n">users</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10005</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;2@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10006</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;3@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10002</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;1@gmail.com&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Type of the Request in Controller]]></title>
    <link href="https://advishnuprasad.com/blog/2012/12/15/find-type-of-the-request-in-controller/"/>
    <updated>2012-12-15T07:51:00+05:30</updated>
    <id>https://advishnuprasad.com/blog/2012/12/15/find-type-of-the-request-in-controller</id>
    <content type="html"><![CDATA[<p>Is there any way to find the type of request in controller ?</p>

<h4>Yes.</h4>

<p>What we do in <code>routes.rb</code> is , define the type of request to particular action.</p>

<p>But, what If we want to find out the type of request in controller .</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">get?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is GET&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">post?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is POST&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">xhr?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is AJAX&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ajax Request in Ruby on Rails (UJS)]]></title>
    <link href="https://advishnuprasad.com/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs/"/>
    <updated>2012-10-10T06:09:19+05:30</updated>
    <id>https://advishnuprasad.com/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs</id>
    <content type="html"><![CDATA[<p>Many programmer uses jquery to catch click event and do $.get or $.post to access the server and print the response in a required div.</p>

<p>But there is a handy way to do ajax request using UJS provided by Rails .</p>

<p>Let us take an example of <code>add to wish list</code> event.</p>

<p>This can be easily achieved in three easy steps.
Now lets see how to do that in rails using UJS</p>

<h4>Step 1:</h4>

<p>In view(<code>show.haml.html</code>) your may have</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we make it as ajax request by adding <code>:remote =&gt; true</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span> <span class="p">,</span><span class="ss">:remote</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>Now in controller</p>

<figure class='code'><figcaption><span>products_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">wish_list</span>
</span><span class='line'>  <span class="c1">#adding wish list </span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">js</span> <span class="c1">#This line is important</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>Step 3:</h4>

<p>Now create a file named wish_list.js.erb</p>

<figure class='code'><figcaption><span>wish_list.js.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">$(&quot;#wish_list_link&quot;).html(&#39;&#39;&lt;b&gt;added to wishlist&lt;/b&gt;&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="x"># Lets say you want to render a partial .</span>
</span><span class='line'>
</span><span class='line'><span class="x">$(&quot;#wish_list_linkt&quot;).html(&#39;</span><span class="cp">&lt;%=</span> <span class="n">escape_javascript</span><span class="p">(</span><span class="n">render</span> <span class="ss">:partial</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list&quot;</span> <span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:product</span> <span class="o">=&gt;</span> <span class="vi">@product</span><span class="p">})</span><span class="cp">%&gt;</span><span class="x">&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4(optional):</h4>

<p>You can use jquery to show the loading part while server is responding</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s2">&quot;#wish_list_link&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">live</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">#show_loading_img</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. As simple as that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubber + EC2 + Rails + Oracle + Nginx + Passenger]]></title>
    <link href="https://advishnuprasad.com/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger/"/>
    <updated>2012-02-02T03:10:36+05:30</updated>
    <id>https://advishnuprasad.com/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger</id>
    <content type="html"><![CDATA[<h2>Deploying rails app into EC2 using Rubber</h2>

<h4>Step 1</h4>

<p>Get the key from aws and store it in ~/.ec2 folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod <span class="m">400</span> keyname
</span></code></pre></td></tr></table></div></figure>


<p>Generate the publickey</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -y -f keyname &gt; keyname.pub
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2</h4>

<p>Add rubber gem in your gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">rubber</span>
</span><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3</h4>

<p>Now do vulcanize. Am using nginx and passenger</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">vulcanize</span> <span class="n">minimal_passenger_nginx</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4</h4>

<p>Now edit following fields in <code>config/rubber/rubber.yml</code></p>

<pre><code>access key
secret access key
account name
app name
app user
image id
image type
</code></pre>

<h4>Step 5 :</h4>

<p>Deploy Part :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">create</span>
</span><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">bootstrap</span>
</span><span class='line'><span class="n">cap</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are using oracle instant client set the environment variable in server and then do <code>cap deploy</code></p>

<h4>Troubleshooting:</h4>

<p>Here is the way to bypass fingerprint authentication prompt</p>

<p>add these two lines in deploy script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh_options</span><span class="o">[</span><span class="ss">:keys</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;HOME&quot;</span><span class="o">]</span><span class="p">,</span> <span class="s2">&quot;.ssh&quot;</span><span class="p">,</span> <span class="s2">&quot;id_rsa&quot;</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;your_deploy_folder&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
