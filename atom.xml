<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rails Murugan]]></title>
  <link href="http://advishnuprasad.github.io/atom.xml" rel="self"/>
  <link href="http://advishnuprasad.github.io/"/>
  <updated>2016-01-26T21:39:58+05:30</updated>
  <id>http://advishnuprasad.github.io/</id>
  <author>
    <name><![CDATA[A D Vishnu Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Active Model Serializers]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/11/14/active-model-serializers/"/>
    <updated>2014-11-14T19:42:22+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/11/14/active-model-serializers</id>
    <content type="html"><![CDATA[<h3>When to use active model serializer ?</h3>

<p>When you have your app running on both browser and mobile app, and if you have a backend rails server then active model serialiser is a perfect gem for serving APIs.</p>

<h3>Gems</h3>

<p>There are other gems like rabl but I personally prefer <code>active_model_serializers</code> gem because this is extremely easy to use and it has lot of + points.</p>

<h4>Step 1 : Add it to your Gemfile</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;active_model_serializers&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.9.3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2 : Create a serializer</h4>

<p>Create a serializer file by running</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">serializer</span> <span class="n">user</span>
</span></code></pre></td></tr></table></div></figure>


<p>which will create <code>app/serializers/user_serializer.rb</code></p>

<h4>Step 3 :</h4>

<p>In serializer, you can add attributes, associations, custom methods.</p>

<figure class='code'><figcaption><span>user_serializer.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSerializer</span> <span class="o">&lt;</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Serializer</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">:timestamp</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So here id and name are user fields. Followers is an association in user. timestamp is a custom method.</p>

<p>You can define that method like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">timestamp</span>
</span><span class='line'>  <span class="n">object</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">B</span> <span class="o">%</span><span class="n">d</span> <span class="o">%</span><span class="n">Y</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4 :</h4>

<p>In your controller, make sure you are rendering json and html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_with</span> <span class="vi">@user</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you visit <code>/users/1.json</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;email&quot;</span><span class="p">:</span> <span class="s2">&quot;foodoo@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Foo doo&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;microposts&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;content&quot;</span><span class="p">:</span> <span class="s2">&quot;This is a micropost&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;user_id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;created_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;updated_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;followers&quot;</span><span class="p">:</span> <span class="p">[</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Solr Servers in Single Machine]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/04/26/multiple-solrs-in-single-solr-instance/"/>
    <updated>2014-04-26T10:52:00+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/04/26/multiple-solrs-in-single-solr-instance</id>
    <content type="html"><![CDATA[<h4>Step 1:</h4>

<p>Go to your solr directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/solr141/
</span><span class='line'>sudo mkdir home1
</span><span class='line'>copy contents into home1 directory from other home directory.
</span><span class='line'>sudo cp -a /opt/solr141/home/. /opt/solr141/home1
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>create <code>solr1.xml</code> under <code>tomcat6/conf/catalina/localhost.</code> Copy from <code>solr.xml</code> and just change value to point to new home dir in environment tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?--&gt;</span>
</span><span class='line'><span class="nt">&lt;Context</span> <span class="na">docBase=</span><span class="s">&quot;/opt/solr/solr141/dist/apache-solr-1.4.1.war&quot;</span> <span class="na">debug=</span><span class="s">&quot;0&quot;</span> <span class="na">crossContext=</span><span class="s">&quot;true&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;Environment</span> <span class="na">name=</span><span class="s">&quot;solr/home&quot;</span> <span class="na">type=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="na">value=</span><span class="s">&quot;/opt/solr/solr141/home1&quot;</span> <span class="na">override=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/Context&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3:</h4>

<figure class='code'><figcaption><span>/opt/solr/solr141/home1/conf/Solr-config.xml </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;dataDir&gt;<span class="k">${</span><span class="nv">solr</span><span class="p">.data.dir:/opt/solr/solr141/home1/data</span><span class="k">}</span>&lt;/dataDir&gt;
</span><span class='line'>&lt;locktype&gt;simple&lt;/locktype&gt;
</span><span class='line'>&lt;unlockonstartup&gt;true&lt;/unlockonstartup&gt;
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4:</h4>

<p>Restart tomcat</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo service tomcat6 restart
</span></code></pre></td></tr></table></div></figure>


<h4>Step 5:</h4>

<p>Since we copied from other home folder, we need to clean up the index</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl localhost:7585/solr1/update --data <span class="s1">&#39;*:*&#39;</span> -H <span class="s1">&#39;Content-type:text/xml; charset=utf-8&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There you go.</p>

<p><code>localhost:8080/solr1</code> should be up and running</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fetch Records From Sql Query - Ruby on Rails - Oci8 Cursor]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor/"/>
    <updated>2014-03-14T18:50:26+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor</id>
    <content type="html"><![CDATA[<p>There might be time when you can&rsquo;t use ActiveRecord finders but have to write custom
queries to fetch the records.</p>

<p>Below example is to fetch records using oci8 adapter.(i.e If you are using oracle db)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;select id, email from users&quot;</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="no">OCI8</span><span class="o">::</span><span class="ss">Cursor</span><span class="p">:</span><span class="mh">0xf73ac30</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>which is nothing but a cursor object.
But how to read the records from this cursor?.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">while</span> <span class="n">r</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">fetch_hash</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="n">users</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10005</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;2@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10006</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;3@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10002</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;1@gmail.com&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Type of the Request in Controller]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/12/15/find-type-of-the-request-in-controller/"/>
    <updated>2012-12-15T07:51:00+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/12/15/find-type-of-the-request-in-controller</id>
    <content type="html"><![CDATA[<p>Is there any way to find the type of request in controller ?</p>

<h4>Yes.</h4>

<p>What we do in <code>routes.rb</code> is , define the type of request to particular action.</p>

<p>But, what If we want to find out the type of request in controller .</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">get?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is GET&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">post?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is POST&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">xhr?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is AJAX&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ajax Request in Ruby on Rails (UJS)]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs/"/>
    <updated>2012-10-10T06:09:19+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs</id>
    <content type="html"><![CDATA[<p>Many programmer uses jquery to catch click event and do $.get or $.post to access the server and print the response in a required div.</p>

<p>But there is a handy way to do ajax request using UJS provided by Rails .</p>

<p>Let us take an example of <code>add to wish list</code> event.</p>

<p>This can be easily achieved in three easy steps.
Now lets see how to do that in rails using UJS</p>

<h4>Step 1:</h4>

<p>In view(<code>show.haml.html</code>) your may have</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we make it as ajax request by adding <code>:remote =&gt; true</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span> <span class="p">,</span><span class="ss">:remote</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>Now in controller</p>

<figure class='code'><figcaption><span>products_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">wish_list</span>
</span><span class='line'>  <span class="c1">#adding wish list </span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">js</span> <span class="c1">#This line is important</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>Step 3:</h4>

<p>Now create a file named wish_list.js.erb</p>

<figure class='code'><figcaption><span>wish_list.js.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">$(&quot;#wish_list_link&quot;).html(&#39;&#39;&lt;b&gt;added to wishlist&lt;/b&gt;&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="x"># Lets say you want to render a partial .</span>
</span><span class='line'>
</span><span class='line'><span class="x">$(&quot;#wish_list_linkt&quot;).html(&#39;</span><span class="cp">&lt;%=</span> <span class="n">escape_javascript</span><span class="p">(</span><span class="n">render</span> <span class="ss">:partial</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list&quot;</span> <span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:product</span> <span class="o">=&gt;</span> <span class="vi">@product</span><span class="p">})</span><span class="cp">%&gt;</span><span class="x">&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4(optional):</h4>

<p>You can use jquery to show the loading part while server is responding</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s2">&quot;#wish_list_link&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">live</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">#show_loading_img</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. As simple as that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubber + EC2 + Rails + Oracle + Nginx + Passenger]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger/"/>
    <updated>2012-02-02T03:10:36+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger</id>
    <content type="html"><![CDATA[<h2>Deploying rails app into EC2 using Rubber</h2>

<h4>Step 1</h4>

<p>Get the key from aws and store it in ~/.ec2 folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod <span class="m">400</span> keyname
</span></code></pre></td></tr></table></div></figure>


<p>Generate the publickey</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -y -f keyname &gt; keyname.pub
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2</h4>

<p>Add rubber gem in your gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">rubber</span>
</span><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3</h4>

<p>Now do vulcanize. Am using nginx and passenger</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">vulcanize</span> <span class="n">minimal_passenger_nginx</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4</h4>

<p>Now edit following fields in <code>config/rubber/rubber.yml</code></p>

<pre><code>access key
secret access key
account name
app name
app user
image id
image type
</code></pre>

<h4>Step 5 :</h4>

<p>Deploy Part :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">create</span>
</span><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">bootstrap</span>
</span><span class='line'><span class="n">cap</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are using oracle instant client set the environment variable in server and then do <code>cap deploy</code></p>

<h4>Troubleshooting:</h4>

<p>Here is the way to bypass fingerprint authentication prompt</p>

<p>add these two lines in deploy script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh_options</span><span class="o">[</span><span class="ss">:keys</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;HOME&quot;</span><span class="o">]</span><span class="p">,</span> <span class="s2">&quot;.ssh&quot;</span><span class="p">,</span> <span class="s2">&quot;id_rsa&quot;</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;your_deploy_folder&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
