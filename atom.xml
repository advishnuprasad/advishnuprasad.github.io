<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A D Vishnu Prasad]]></title>
  <link href="http://advishnuprasad.github.io/atom.xml" rel="self"/>
  <link href="http://advishnuprasad.github.io/"/>
  <updated>2016-03-29T18:49:14+05:30</updated>
  <id>http://advishnuprasad.github.io/</id>
  <author>
    <name><![CDATA[A D Vishnu Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup NFS Server and Client Using Ansible]]></title>
    <link href="http://advishnuprasad.github.io/blog/2016/03/29/setup-nfs-server-and-client-using-ansible/"/>
    <updated>2016-03-29T18:16:12+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2016/03/29/setup-nfs-server-and-client-using-ansible</id>
    <content type="html"><![CDATA[<h3>Setup NFS server and client using ansible</h3>

<p>If you have a centralized server and you want to share a disk from the server, the best way is
to use NFS model.</p>

<p><img src="http://advishnuprasad.github.io/images/nfs.png" alt="API docs image" /></p>

<p>You might have to create a server with enough disk space. Let&rsquo;s say you have a disk with file system
as <code>/dev/xvdb</code> and the size is 100 GB.</p>

<p>Now you want to share this volume with other machines. Below is the script to do it using ansible.</p>

<p>Read <a href="https://help.ubuntu.com/community/SettingUpNFSHowTo">this</a> tutorial before writing ansible script.</p>

<h3>Ansible script</h3>

<figure class='code'><figcaption><span>inventory.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">[</span><span class="nv">nfs_server</span><span class="p-Indicator">]</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.1</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">[nfs_clients]</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.2</span>
</span><span class='line'><span class="l-Scalar-Plain">10.0.0.3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>exports.j2</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># /etc/exports: the access control list for filesystems which may be exported</span>
</span><span class='line'><span class="c">#               to NFS clients.  See exports(5).</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Example for NFSv2 and NFSv3:</span>
</span><span class='line'><span class="c"># /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Example for NFSv4:</span>
</span><span class='line'><span class="c"># /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)</span>
</span><span class='line'><span class="c"># /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'>/nfs            10.0.0.1/24<span class="o">(</span>rw,sync,no_root_squash,no_subtree_check<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>nfs-server.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nfs_server</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Create mountable dir</span>
</span><span class='line'>      <span class="l-Scalar-Plain">file</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">path=/share state=directory mode=777 owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">make sure the mount drive has a filesystem</span>
</span><span class='line'>      <span class="l-Scalar-Plain">filesystem</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">fstype=ext4 dev={{ mountable_share_drive | default(&#39;/dev/xvdb&#39;) }}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set mountpoints</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=/share src={{ mountable_share_drive | default(&#39;/dev/xvdb&#39;) }} fstype=auto opts=defaults,nobootwait dump=0 passno=2 state=mounted</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Ensure NFS utilities are installed.</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name={{ item }} state=installed update_cache=yes</span>
</span><span class='line'>      <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">nfs-common</span>
</span><span class='line'>        <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">nfs-kernel-server</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">copy /etc/exports</span>
</span><span class='line'>      <span class="l-Scalar-Plain">template</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">src=exports.j2 dest=/etc/exports owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">restart nfs server</span>
</span><span class='line'>      <span class="l-Scalar-Plain">service</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=nfs-kernel-server state=restarted</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>nfs_clients.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">nfs_clients</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Ensure NFS common is installed.</span>
</span><span class='line'>      <span class="l-Scalar-Plain">apt</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=nfs-common state=installed update_cache=yes</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Create mountable dir</span>
</span><span class='line'>      <span class="l-Scalar-Plain">file</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">path=/nfs state=directory mode=777 owner=root group=root</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">set mountpoints</span>
</span><span class='line'>      <span class="l-Scalar-Plain">mount</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">name=/nfs src={{hostvars[groups[&#39;nfs_server&#39;][0]][&#39;ansible_eth0&#39;][&#39;ipv4&#39;][&#39;address&#39;]}}:/share fstype=nfs opts=defaults,nobootwait dump=0 passno=2 state=mounted</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SOAP Request From Ruby Without Savon]]></title>
    <link href="http://advishnuprasad.github.io/blog/2016/03/25/soap-request-from-ruby-without-savon/"/>
    <updated>2016-03-25T21:11:47+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2016/03/25/soap-request-from-ruby-without-savon</id>
    <content type="html"><![CDATA[<h3>Send SOAP request from ruby net/http without using Savon gem</h3>

<p>You would have seen everyone is using Savon gem for sending SOAP request. But what if the service is using SOAP 1.1.
You might want to write your own http request. Here is the way to send request with SOAP envelope body.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/https&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;nokogiri&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Create the http object</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s2">&quot;http://www.webservicex.net/globalweather.asmx?WSDL&quot;</span>
</span><span class='line'><span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class='line'><span class="n">http</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">host</span><span class="p">,</span> <span class="n">uri</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'><span class="n">http</span><span class="o">.</span><span class="n">use_ssl</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Raw SOAP XML to be passed</span>
</span><span class='line'><span class="c1"># TODO : Date should be dynamic</span>
</span><span class='line'><span class="n">data</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">&lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;</span>
</span><span class='line'><span class="sh">  &lt;soap:Body&gt;</span>
</span><span class='line'><span class="sh">    &lt;GetWeather xmlns=&quot;http://www.webserviceX.NET&quot;&gt;</span>
</span><span class='line'><span class="sh">      &lt;CityName&gt;Madras&lt;/CityName&gt;</span>
</span><span class='line'><span class="sh">      &lt;CountryName&gt;India&lt;/CountryName&gt;</span>
</span><span class='line'><span class="sh">    &lt;/GetWeather&gt;</span>
</span><span class='line'><span class="sh">  &lt;/soap:Body&gt;</span>
</span><span class='line'><span class="sh">&lt;/soap:Envelope&gt;</span>
</span><span class='line'><span class="no">EOF</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># # Set Headers</span>
</span><span class='line'><span class="c1"># SOAPAction is mandatory</span>
</span><span class='line'><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;Content-Type&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;text/xml; charset=utf-8&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;SOAPAction&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;http://www.webserviceX.NET/GetWeather&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">result</span><span class="o">=</span> <span class="n">http</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">uri</span><span class="o">.</span><span class="n">path</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Parse</span>
</span><span class='line'><span class="n">doc</span> <span class="o">=</span> <span class="no">Nokogiri</span><span class="o">::</span><span class="no">XML</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">body</span><span class="p">)</span>
</span><span class='line'><span class="n">doc</span><span class="o">.</span><span class="n">remove_namespaces!</span> <span class="c1"># Remove namespaces from xml to make it clean</span>
</span><span class='line'><span class="nb">p</span> <span class="n">doc</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Provide Ssh Access to User Using Ansible]]></title>
    <link href="http://advishnuprasad.github.io/blog/2016/02/11/add-user/"/>
    <updated>2016-02-11T19:42:30+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2016/02/11/add-user</id>
    <content type="html"><![CDATA[<h3>How to provide production server access to users using ansible?</h3>

<h4>Assumptions:</h4>

<p>  You have  ssh access to prod servers as Ubuntu user.</p>

<h5>Ansible Script for adding user</h5>

<figure class='code'><figcaption><span>add_user.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># ansible-playbook add_user.yml --extra-vars &quot;user=advp key=advp.pub&quot; -i ad</span>
</span><span class='line'><span class="nn">---</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">all</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">True</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_method</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">sudo</span>
</span><span class='line'>  <span class="l-Scalar-Plain">become_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">root</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Add user</span>
</span><span class='line'>      <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span>
</span><span class='line'>            <span class="l-Scalar-Plain">name=&quot;{{ user }}&quot;</span>
</span><span class='line'>            <span class="l-Scalar-Plain">shell=/bin/bash</span>
</span><span class='line'>            <span class="l-Scalar-Plain">state=present</span>
</span><span class='line'>            <span class="l-Scalar-Plain">groups=staff</span>
</span><span class='line'>            <span class="l-Scalar-Plain">append=yes</span>
</span><span class='line'>            <span class="l-Scalar-Plain">createhome=yes</span>
</span><span class='line'>            <span class="l-Scalar-Plain">password=&lt;password SALT&gt;</span>
</span><span class='line'>            <span class="l-Scalar-Plain">update_password=on_create</span>
</span><span class='line'>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Add keys to the users</span>
</span><span class='line'>      <span class="l-Scalar-Plain">authorized_key</span><span class="p-Indicator">:</span>
</span><span class='line'>        <span class="l-Scalar-Plain">key=&quot;{{ lookup(&#39;file&#39;, &#39;{{ key }}&#39;) }}&quot;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">user=&quot;{{ user }}&quot;</span>
</span><span class='line'>        <span class="l-Scalar-Plain">state=present</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Add a single user:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ansible-playbook add_user.yml --extra-vars <span class="s2">&quot;user=advp key=&lt;user/pub/key/path&gt;&quot;</span>  -i inventory/ad
</span></code></pre></td></tr></table></div></figure>


<p>don&rsquo;t forget to change the user and key location in the above command.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generate API Documentation Using Rspec Acceptance Tests]]></title>
    <link href="http://advishnuprasad.github.io/blog/2016/02/07/api-docs-using-rspecs/"/>
    <updated>2016-02-07T11:43:58+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2016/02/07/api-docs-using-rspecs</id>
    <content type="html"><![CDATA[<h4>Step 1:</h4>

<p>Install required gems</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rspec_api_documentation&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;raddocs&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>Create acceptance_helper.rb in spec folder</p>

<figure class='code'><figcaption><span>acceptance_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec_api_documentation&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec_api_documentation/dsl&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">RspecApiDocumentation</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">format</span> <span class="o">=</span> <span class="ss">:json</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">curl_host</span> <span class="o">=</span> <span class="s1">&#39;http://fysquare.dev&#39;</span> <span class="c1"># Will be used in curl request</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">api_name</span> <span class="o">=</span> <span class="s2">&quot;FySquare API&quot;</span> <span class="c1"># Your API name</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">request_headers_to_include</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Host&quot;</span><span class="p">,</span> <span class="s2">&quot;Content-Type&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">response_headers_to_include</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Host&quot;</span><span class="p">,</span> <span class="s2">&quot;Content-Type&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">curl_headers_to_filter</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;Authorization&quot;</span><span class="o">]</span> <span class="c1"># Remove this if you want to show Auth headers in request</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">keep_source_order</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create raddoc.rb in initializers</p>

<figure class='code'><figcaption><span>raddoc.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Raddocs</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">api_name</span> <span class="o">=</span> <span class="s2">&quot;FySquare API Documentation&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add API route in config.rb</p>

<figure class='code'><figcaption><span>routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">mount</span> <span class="no">Raddocs</span><span class="o">::</span><span class="no">App</span> <span class="o">=&gt;</span> <span class="s2">&quot;/api_docs&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3:</h4>

<p>Now you need to write acceptance specs which will be used to generate docs.</p>

<p>Below is the spec for listing users API. You can change the params depends on your API.</p>

<figure class='code'><figcaption><span>users_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;acceptance_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">resource</span> <span class="s2">&quot;User&quot;</span><span class="p">,</span> <span class="ss">acceptance</span><span class="p">:</span> <span class="kp">true</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">let</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">header</span> <span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Auth code&#39;</span>
</span><span class='line'>    <span class="n">header</span> <span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;application/json&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;/api/users&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">example_request</span> <span class="s2">&quot;Listing Users&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">explanation</span> <span class="s2">&quot;List all the users in the system&quot;</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:ids</span><span class="p">,</span> <span class="s2">&quot;List of user ids to be fetched&quot;</span>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:email</span><span class="p">,</span> <span class="s2">&quot;Search users by email&quot;</span>
</span><span class='line'>    <span class="n">parameter</span> <span class="ss">:page</span><span class="p">,</span> <span class="s2">&quot;Page to view&quot;</span>
</span><span class='line'>    <span class="n">example</span> <span class="s2">&quot;Get users by params&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">explanation</span> <span class="s2">&quot;Get users by params&quot;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">do_request</span><span class="p">(</span><span class="ss">:ids</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">do_request</span><span class="p">(</span><span class="ss">:email</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="s1">&#39;foo@example.com&#39;</span><span class="p">,</span> <span class="s1">&#39;doo@example.com&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span> <span class="mi">200</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span> <span class="s2">&quot;/api/users/:id&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">let</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span> <span class="p">{</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">example_request</span> <span class="s2">&quot;Getting a specific user&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">status</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">eq</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4:</h4>

<p>Run this rake command to generate API.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">docs</span><span class="p">:</span><span class="n">generate</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now navigate to <code>localhost:3000/docs</code></p>

<p><img src="http://advishnuprasad.github.io/images/api_doc1.png" alt="API docs image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Active Model Serializers]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/11/14/active-model-serializers/"/>
    <updated>2014-11-14T19:42:22+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/11/14/active-model-serializers</id>
    <content type="html"><![CDATA[<h3>When to use active model serializer ?</h3>

<p>When you have your app running on both browser and mobile app, and if you have a backend rails server then active model serialiser is a perfect gem for serving APIs.</p>

<h3>Gems</h3>

<p>There are other gems like rabl but I personally prefer <code>active_model_serializers</code> gem because this is extremely easy to use and it has lot of + points.</p>

<h4>Step 1 : Add it to your Gemfile</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;active_model_serializers&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.9.3&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2 : Create a serializer</h4>

<p>Create a serializer file by running</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">serializer</span> <span class="n">user</span>
</span></code></pre></td></tr></table></div></figure>


<p>which will create <code>app/serializers/user_serializer.rb</code></p>

<h4>Step 3 :</h4>

<p>In serializer, you can add attributes, associations, custom methods.</p>

<figure class='code'><figcaption><span>user_serializer.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">UserSerializer</span> <span class="o">&lt;</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Serializer</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:followers</span><span class="p">,</span> <span class="ss">:timestamp</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>So here id and name are user fields. Followers is an association in user. timestamp is a custom method.</p>

<p>You can define that method like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">timestamp</span>
</span><span class='line'>  <span class="n">object</span><span class="o">.</span><span class="n">created_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">B</span> <span class="o">%</span><span class="n">d</span> <span class="o">%</span><span class="n">Y</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4 :</h4>

<p>In your controller, make sure you are rendering json and html</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">respond_with</span> <span class="vi">@user</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you visit <code>/users/1.json</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;user&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;email&quot;</span><span class="p">:</span> <span class="s2">&quot;foodoo@example.com&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Foo doo&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;microposts&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;content&quot;</span><span class="p">:</span> <span class="s2">&quot;This is a micropost&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;user_id&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;created_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="nt">&quot;updated_at&quot;</span><span class="p">:</span> <span class="s2">&quot;2014-11-11T16:11:08.500Z&quot;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="nt">&quot;followers&quot;</span><span class="p">:</span> <span class="p">[</span> <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Solr Servers in Single Machine]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/04/26/multiple-solrs-in-single-solr-instance/"/>
    <updated>2014-04-26T10:52:00+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/04/26/multiple-solrs-in-single-solr-instance</id>
    <content type="html"><![CDATA[<h4>Step 1:</h4>

<p>Go to your solr directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /opt/solr141/
</span><span class='line'>sudo mkdir home1
</span><span class='line'>copy contents into home1 directory from other home directory.
</span><span class='line'>sudo cp -a /opt/solr141/home/. /opt/solr141/home1
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>create <code>solr1.xml</code> under <code>tomcat6/conf/catalina/localhost.</code> Copy from <code>solr.xml</code> and just change value to point to new home dir in environment tag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!--?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?--&gt;</span>
</span><span class='line'><span class="nt">&lt;Context</span> <span class="na">docBase=</span><span class="s">&quot;/opt/solr/solr141/dist/apache-solr-1.4.1.war&quot;</span> <span class="na">debug=</span><span class="s">&quot;0&quot;</span> <span class="na">crossContext=</span><span class="s">&quot;true&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;Environment</span> <span class="na">name=</span><span class="s">&quot;solr/home&quot;</span> <span class="na">type=</span><span class="s">&quot;java.lang.String&quot;</span> <span class="na">value=</span><span class="s">&quot;/opt/solr/solr141/home1&quot;</span> <span class="na">override=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/Context&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3:</h4>

<figure class='code'><figcaption><span>/opt/solr/solr141/home1/conf/Solr-config.xml </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;dataDir&gt;<span class="k">${</span><span class="nv">solr</span><span class="p">.data.dir:/opt/solr/solr141/home1/data</span><span class="k">}</span>&lt;/dataDir&gt;
</span><span class='line'>&lt;locktype&gt;simple&lt;/locktype&gt;
</span><span class='line'>&lt;unlockonstartup&gt;true&lt;/unlockonstartup&gt;
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4:</h4>

<p>Restart tomcat</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo service tomcat6 restart
</span></code></pre></td></tr></table></div></figure>


<h4>Step 5:</h4>

<p>Since we copied from other home folder, we need to clean up the index</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl localhost:7585/solr1/update --data <span class="s1">&#39;*:*&#39;</span> -H <span class="s1">&#39;Content-type:text/xml; charset=utf-8&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>There you go.</p>

<p><code>localhost:8080/solr1</code> should be up and running</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fetch Records From Sql Query - Ruby on Rails - Oci8 Cursor]]></title>
    <link href="http://advishnuprasad.github.io/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor/"/>
    <updated>2014-03-14T18:50:26+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2014/03/14/fetch-records-from-sql-query-ruby-on-rails-oci8-cursor</id>
    <content type="html"><![CDATA[<p>There might be time when you can&rsquo;t use ActiveRecord finders but have to write custom
queries to fetch the records.</p>

<p>Below example is to fetch records using oci8 adapter.(i.e If you are using oracle db)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s2">&quot;select id, email from users&quot;</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="no">OCI8</span><span class="o">::</span><span class="ss">Cursor</span><span class="p">:</span><span class="mh">0xf73ac30</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>which is nothing but a cursor object.
But how to read the records from this cursor?.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">while</span> <span class="n">r</span> <span class="o">=</span> <span class="n">users</span><span class="o">.</span><span class="n">fetch_hash</span>
</span><span class='line'>   <span class="nb">puts</span> <span class="n">users</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The output will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10005</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;2@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10006</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;3@gmail.com&quot;</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;ID&quot;</span><span class="err">=&gt;</span><span class="mi">10002</span><span class="p">,</span> <span class="nt">&quot;EMAIL&quot;</span><span class="err">=&gt;</span><span class="s2">&quot;1@gmail.com&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Type of the Request in Controller]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/12/15/find-type-of-the-request-in-controller/"/>
    <updated>2012-12-15T07:51:00+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/12/15/find-type-of-the-request-in-controller</id>
    <content type="html"><![CDATA[<p>Is there any way to find the type of request in controller ?</p>

<h4>Yes.</h4>

<p>What we do in <code>routes.rb</code> is , define the type of request to particular action.</p>

<p>But, what If we want to find out the type of request in controller .</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">get?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is GET&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">post?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is POST&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="n">request</span><span class="o">.</span><span class="n">xhr?</span>
</span><span class='line'>   <span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Request is AJAX&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ajax Request in Ruby on Rails (UJS)]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs/"/>
    <updated>2012-10-10T06:09:19+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/10/10/ajax-request-in-ruby-on-rails-ujs</id>
    <content type="html"><![CDATA[<p>Many programmer uses jquery to catch click event and do $.get or $.post to access the server and print the response in a required div.</p>

<p>But there is a handy way to do ajax request using UJS provided by Rails .</p>

<p>Let us take an example of <code>add to wish list</code> event.</p>

<p>This can be easily achieved in three easy steps.
Now lets see how to do that in rails using UJS</p>

<h4>Step 1:</h4>

<p>In view(<code>show.haml.html</code>) your may have</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we make it as ajax request by adding <code>:remote =&gt; true</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">link_to</span> <span class="s2">&quot;Add to wishlist&quot;</span> <span class="p">,</span> <span class="n">wish_list_path</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="p">,</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list_link&quot;</span> <span class="p">,</span><span class="ss">:remote</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2:</h4>

<p>Now in controller</p>

<figure class='code'><figcaption><span>products_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">wish_list</span>
</span><span class='line'>  <span class="c1">#adding wish list </span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">js</span> <span class="c1">#This line is important</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h4>Step 3:</h4>

<p>Now create a file named wish_list.js.erb</p>

<figure class='code'><figcaption><span>wish_list.js.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">$(&quot;#wish_list_link&quot;).html(&#39;&#39;&lt;b&gt;added to wishlist&lt;/b&gt;&quot;);</span>
</span><span class='line'>
</span><span class='line'><span class="x"># Lets say you want to render a partial .</span>
</span><span class='line'>
</span><span class='line'><span class="x">$(&quot;#wish_list_linkt&quot;).html(&#39;</span><span class="cp">&lt;%=</span> <span class="n">escape_javascript</span><span class="p">(</span><span class="n">render</span> <span class="ss">:partial</span> <span class="o">=&gt;</span> <span class="s2">&quot;wish_list&quot;</span> <span class="p">,</span> <span class="ss">:locals</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:product</span> <span class="o">=&gt;</span> <span class="vi">@product</span><span class="p">})</span><span class="cp">%&gt;</span><span class="x">&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4(optional):</h4>

<p>You can use jquery to show the loading part while server is responding</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s2">&quot;#wish_list_link&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">live</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">#show_loading_img</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it. As simple as that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubber + EC2 + Rails + Oracle + Nginx + Passenger]]></title>
    <link href="http://advishnuprasad.github.io/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger/"/>
    <updated>2012-02-02T03:10:36+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2012/02/02/rubber-plus-ec2-plus-rails-plus-oracle-plus-nginx-plus-passenger</id>
    <content type="html"><![CDATA[<h2>Deploying rails app into EC2 using Rubber</h2>

<h4>Step 1</h4>

<p>Get the key from aws and store it in ~/.ec2 folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod <span class="m">400</span> keyname
</span></code></pre></td></tr></table></div></figure>


<p>Generate the publickey</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh-keygen -y -f keyname &gt; keyname.pub
</span></code></pre></td></tr></table></div></figure>


<h4>Step 2</h4>

<p>Add rubber gem in your gemfile</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">rubber</span>
</span><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 3</h4>

<p>Now do vulcanize. Am using nginx and passenger</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">vulcanize</span> <span class="n">minimal_passenger_nginx</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Step 4</h4>

<p>Now edit following fields in <code>config/rubber/rubber.yml</code></p>

<pre><code>access key
secret access key
account name
app name
app user
image id
image type
</code></pre>

<h4>Step 5 :</h4>

<p>Deploy Part :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">create</span>
</span><span class='line'><span class="n">cap</span> <span class="ss">rubber</span><span class="p">:</span><span class="n">bootstrap</span>
</span><span class='line'><span class="n">cap</span> <span class="n">deploy</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you are using oracle instant client set the environment variable in server and then do <code>cap deploy</code></p>

<h4>Troubleshooting:</h4>

<p>Here is the way to bypass fingerprint authentication prompt</p>

<p>add these two lines in deploy script.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ssh_options</span><span class="o">[</span><span class="ss">:keys</span><span class="o">]</span> <span class="o">=</span> <span class="o">[</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;HOME&quot;</span><span class="o">]</span><span class="p">,</span> <span class="s2">&quot;.ssh&quot;</span><span class="p">,</span> <span class="s2">&quot;id_rsa&quot;</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:deploy_to</span><span class="p">,</span> <span class="s2">&quot;your_deploy_folder&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
