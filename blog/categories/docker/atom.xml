<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Docker, | A D Vishnu Prasad]]></title>
  <link href="http://advishnuprasad.github.io/blog/categories/docker/atom.xml" rel="self"/>
  <link href="http://advishnuprasad.github.io/"/>
  <updated>2017-11-09T13:47:03-05:00</updated>
  <id>http://advishnuprasad.github.io/</id>
  <author>
    <name><![CDATA[A D Vishnu Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Docker Commands]]></title>
    <link href="http://advishnuprasad.github.io/blog/2017/10/31/docker-commands/"/>
    <updated>2017-10-31T11:50:54-04:00</updated>
    <id>http://advishnuprasad.github.io/blog/2017/10/31/docker-commands</id>
    <content type="html"><![CDATA[<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker pull my_image # Pull my_image from hub.docker.com&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker pull my_image:10.1.2 # Pull a specific version&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker build . # Build image using Dockerfile in current directory&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker images # List docker images&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker build -t my_image . # Build and name the image as my_image&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker run -d -e ENV_NAME=pswd my_image # Run docker image as daemon (-d) and pass env variables (-e) ENV_PASSWORD&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker ps # List running containers&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker run —-name my-image-1 -d -e ENV_PASSWORD=pswd my_image # Run image in a contianer named my-image-1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker run —-name my-image-1 -d -e ENV_PASSWORD=pswd -p 3306:306 my_image  # Map and Expose (-p) the docker container on the port 3306 so that it can be accessed from outside the secure docker env&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker-machine ip default  # List ip of default docker&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker stop my_image # Stop container my_image&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker start my_image # Start continer my_image&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker netwrok ls       # List networks created inside docker&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker network create my-network # Create a custom network (including internal DNS server) so that containers can talk to each other&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker network connect my-network my-image-1 # Add the container (my-image-1) to the network (my-network)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker run —rm —network my-network my-image-1 # Specify the network while starting the container&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker run &ndash;name my-est-my_image -d -v /my/datadir:/var/lib/my_data -e ENV_PASSWORD=pswd  my_image # Map the host volume (-v)  /my/datadir to docker volume /var/lib/my_data&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker tag my_image advp/my_image:1.0 # Tag the image with username and version&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker login  #L ogin to docker repo&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker push advp/my_image:1.0 # Push your image to docker repo&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker ps -a   # List all containers regardless of state&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker rm my-image-1 # Remove comtainer my-image-1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker rmi my_image # Remove image my_image&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker rmi $(docker images -q -f dangling=true) #Remove unnamed dangling images which may have got created while debugging etc&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker port my-image-1 #List ports exposed by a container&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker top my-image-1 # List processes running in the container&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker exec my-image-1 ls  # Run a command (ls) inside a container (my-image-1)&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>docker exec -it my-image-1 bash # SSH into the container and access bash&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
