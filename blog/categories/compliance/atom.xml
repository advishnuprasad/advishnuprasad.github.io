<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Compliance | A D Vishnu Prasad]]></title>
  <link href="http://advishnuprasad.github.io/blog/categories/compliance/atom.xml" rel="self"/>
  <link href="http://advishnuprasad.github.io/"/>
  <updated>2024-02-03T22:08:49+05:30</updated>
  <id>http://advishnuprasad.github.io/</id>
  <author>
    <name><![CDATA[A D Vishnu Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SSH Into EC2 Instances Without Opening Port 22]]></title>
    <link href="http://advishnuprasad.github.io/blog/2024/02/03/ssh-into-ec2-instances-without-opening-port-22/"/>
    <updated>2024-02-03T21:42:54+05:30</updated>
    <id>http://advishnuprasad.github.io/blog/2024/02/03/ssh-into-ec2-instances-without-opening-port-22</id>
    <content type="html"><![CDATA[<h2>Introduction</h2>

<p>The easy way to access an EC2 instance from your terminal is by running <code>ssh</code> command. But for that you need to open
port 22 for your IP and most of the time the developers tend to open it for the public. This results in a big security
hole.</p>

<p>So how do we access the EC2 instance without opening port 22 at all? There is a way!
You can make use of AWS SSM to access the instance and you don&rsquo;t have to open port 22 at all.
This is a best practice and good for your compliance security reports.</p>

<h2>AWS Session Manager</h2>

<p>A bastion host, sometimes called a jump box, is a server that provides a single point of access from an external network to the resources located in a private network. A server exposed to an external public network, such as the internet, poses a potential security risk for unauthorized access. It’s important to secure and control access to these servers.</p>

<p>This pattern describes how you can use Session Manager (<a href="https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/access-a-bastion-host-by-using-session-manager-and-amazon-ec2-instance-connect.html">Reference</a>) and Amazon EC2 Instance Connect to securely connect to an Amazon Elastic Compute Cloud (Amazon EC2) bastion host deployed in your AWS account. Session Manager is a capability of AWS Systems Manager. The benefits of this pattern include:</p>

<ul>
<li><p>The deployed bastion host doesn’t have any open, inbound ports exposed to the public internet. This reduces the potential attack surface.</p></li>
<li><p>You don’t need to store and maintain long-term Secure Shell (SSH) keys in your AWS account. Instead, each user generates a new SSH key pair each time they connect to the bastion host. AWS Identity and Access Management (IAM) policies that are attached to the user’s AWS credentials control access to the bastion host.</p></li>
</ul>


<h2>Setup Guide</h2>

<h3>Prerequisites</h3>

<ol>
<li><strong>AWS CLI</strong>: Ensure you have the AWS Command Line Interface (CLI) installed on your macOS. If not installed, you can download and install it from the <a href="https://aws.amazon.com/cli/">AWS CLI official website</a>.</li>
<li><strong>Configure AWS CLI</strong>: If you haven&rsquo;t configured your AWS CLI yet, you need to do it by running the following command and providing your AWS Access Key ID, Secret Access Key, and default region:</li>
<li><p>The AWS user must have the following role <code>AmazonSSMManagedInstanceCore</code> attached to their user policy</p>

<pre><code>aws configure
</code></pre>

<p>This step is required to ensure the AWS CLI can authenticate and access your AWS account.</p></li>
</ol>


<h3>Install the Session Manager plugin on macOS</h3>

<p>For other OS follow this <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/install-plugin-macos-overview.html">link</a></p>

<ol>
<li><p><strong>Download the bundled installer</strong>.</p>

<pre><code>curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/mac/sessionmanager-bundle.zip" -o "sessionmanager-bundle.zip"
</code></pre></li>
<li><p><strong>Unzip the package</strong>.</p>

<pre><code>unzip sessionmanager-bundle.zip
</code></pre></li>
<li><p><strong>Run the install command</strong>.</p>

<pre><code>sudo ./sessionmanager-bundle/install -i /usr/local/sessionmanagerplugin -b /usr/local/bin/session-manager-plugin
</code></pre></li>
<li><p><strong>Remove the bundled installer</strong>.</p>

<pre><code>rm sessionmanager-bundle.zip
rm -rf sessionmanager-bundle
</code></pre></li>
</ol>


<h3>Connect to an EC2 Instance using Session Manager</h3>

<pre><code class="``">  aws ssm start-session --target &lt;Instance ID&gt; --region ap-southeast-2
</code></pre>

<p>That&rsquo;s it. Now you should be able to access EC2 Instance without worrying about port 22.</p>
]]></content>
  </entry>
  
</feed>
